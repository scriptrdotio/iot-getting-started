var deviceManager = require("../entities/deviceManager");
var _ = require("modules/underscore/underscore.js")._;
var moment = require("modules/momentjs/moment.min.js").moment;

var log = require("log");

var query = {};

var body = request.body ? request.body : ((request.rawBody) ? request.rawBody : request.parameters);
if(body.body) body = body.body;
var query = typeof(body) == "string" ? JSON.parse(body) : body;

//var query = {"id":"myDevice"};

var device = deviceManager.getDeviceDefinition(query.id);
var entries = deviceManager.getDeviceHistoricalEntriesTimescale(query.id);

var sensors =  typeof(query.sensors) == "string" ? [query.sensors] : query.sensors;
var format = query.format


// Code with measurement unit fix and code with sensors ordering
if(format == "dygraphs") {
    var formattedData = [];
    _.each(entries, function(entry){
        var tmp = [];
        tmp.push(moment(entry["timestamp"].time).startOf('second').valueOf()) //Round to start of minute
        log.info(JSON.stringify(sensors));
        _.each(sensors, function(sensor){
             var deviceId = entry["id"]
             var found = _.some(entry, function(value, key){
                 if(key == sensor) {
                    var v  = parseFloat(value);
                   log.info(key + " "+request.user.measureTemp)
                   tmp.push(v)
                   log.info(JSON.stringify(tmp))
                   return true;
                 } 
            });
            if(!found) {
                tmp.push(null);
            }
     	});
      formattedData.push(tmp);
	});
   return formattedData;
} else {
    return entries;    
}