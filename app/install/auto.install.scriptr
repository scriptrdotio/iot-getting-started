var responseObject = {"failure": [], "success": []};
var channels = require("channel");
var devices = require("device");
var users = require("user");
var groups = require("group");


var body = request.body ? request.body : ((request.rawBody) ? request.rawBody : request.parameters);
var inputData = typeof(body) == "string" ? JSON.parse(body) : body;

var configurationSettings = {"apsdb.optionalBindReferrer": "true"};
var saveConfiguration = apsdb.callApi("SaveConfiguration", configurationSettings, null)
if(saveConfiguration.metadata.status == "failure"){
   responseObject.failure.push("Setup account user tokens not bound to the referrer failed."+ saveConfiguration.metadata.errorDetail);
} else {
    responseObject.success.push("Setup account user tokens not bound to the referrer is successful.");
}


//create users to be used to login to the app
var usersList = [ //Device used to login to iot app
    {  
        "id":"admin",
        "password" : "admin",
        "name" : "admin",
        "email": request.account.adminEmail,
        "groups": ["editor"]
    }
];

usersList.forEach(function(params) {
  var saveUser= users.save(params);
    
    if(saveUser.metadata.status == "failure"){
       responseObject.failure.push("Creating user/password to login to sample application. "+saveUser.metadata.errorDetail);
    } else {
       responseObject.success.push("Create admin/admin user to login to sample application.");
    }
});



var pubsub = require("pubsub");
var topic = pubsub.getInstance(dataChannel);
var response = topic.subscribe("app/api/subscription/subscriber", "script");
if(response.metadata.status == "failure" && response.metadata.errorCode != "CALLBACK_SUBSCRIBED") {
     responseObject.failure.push("Failed to subscribe the script app/api/subscription/subscriber to the channel " + dataChannel + "." + response.metadata.errorDetail);
} else {
    responseObject.success.push("The script app/api/subscription/subscriber was successfully subscribed to ingest data from the channel " + dataChannel + ".");
}

return responseObject;
